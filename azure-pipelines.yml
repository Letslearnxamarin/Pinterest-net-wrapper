# ASP.NET Core
# Build and test ASP.NET Core web applications targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'
  major: 1
  minor: 0
  patch: 0
  Rev: 0

steps:
- task: NuGetToolInstaller@0
  displayName: "NuGet use 4.6.2"
  inputs:
      versionSpec: 4.6.2

- task: DotNetCoreInstaller@0
  displayName: DotNet CLI Installer
  inputs:
    version: 2.1.402

- task: PowerShell@2
  displayName: 'Powershell -- apply Version to Assemblies'
  inputs:
    type: FilePath
    filePath: '$(Build.SourcesDirectory)/BuildDeployScripts/ApplyVersionToAssemblies.ps1'
    noCache: true

- task: bool.update-assembly-info.update-assembly-info-task.update-assembly-info@2
  displayName: 'Update Assembly: **\*AssemblyInfo.*'
  inputs:
    company: 'LetsLearnXamarin'
    product: 'PinterestNetSDK'
    informationalVersion: '$(major).$(minor).$(patch).$(Rev:r)'
    fileVersionMajor: '$(major)'
    fileVersionMinor: '$(minor)'
    fileVersionBuild: '$(patch)'
    fileVersionRevision: '$(Rev:r)'
    assemblyVersionMajor: '$(major)'
    assemblyVersionMinor: '$(minor)'
    assemblyVersionBuild: '$(patch)'
    assemblyVersionRevision: '$(Rev:r)'

- task: DotNetCoreCLI@2
  displayName: ".NET build"
  inputs:
      command: build
      projects: '**/*.csproj'
      arguments: --configuration $(BuildConfiguration)

- task: DotNetCoreCLI@2
  displayName: ".NET test"
  inputs:
      command: test
      projects: '**/*Tests.csproj'
      publishTestResults: true
      arguments: '--no-build -c $(buildConfiguration)'

- task: CopyFiles@2
  displayName: 'Copy Files PinterestService.Client to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)/PinterestWrapper/PinterestService.Client'
    Contents: '**/*'
    TargetFolder: '$(build.artifactstagingdirectory)/PinterestService.Client'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'